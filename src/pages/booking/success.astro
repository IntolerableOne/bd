---
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import { Icon } from "astro-icon";
import { prisma } from '../../lib/prisma';

interface Booking {
  id: string;
  name: string;
  email: string;
  phone: string;
  paid: boolean;
  availability: {
    date: Date;
    startTime: string;
    midwife: string;
  } | null;
  createdAt: Date;
  updatedAt: Date;
}

const bookingId = Astro.url.searchParams.get('bookingId');
let booking: Booking | null = null;
let error: string | null = null;

if (!bookingId) {
  error = 'Missing booking ID in URL parameters. Please check your confirmation email for the correct link.';
} else if (!/^[a-zA-Z0-9_-]+$/.test(bookingId)) {
  error = 'Invalid booking ID format. Please check your confirmation email for the correct link.';
} else {
  try {
    console.log(`üîç Looking up booking: ${bookingId}`);
    
    const result = await prisma.booking.findUnique({
      where: { id: bookingId },
      include: {
        availability: {
          select: {
            date: true,
            startTime: true,
            midwife: true
          }
        }
      }
    });
    
    if (!result) {
      console.warn(`‚ùå Booking not found: ${bookingId}`);
      error = `Booking ${bookingId} not found. This may occur if the booking was cancelled or the ID is incorrect.`;
    } else if (!result.paid) {
      console.warn(`‚ö†Ô∏è Booking found but not paid: ${bookingId}`);
      error = `Payment for booking ${bookingId} is still being processed. Please wait a few minutes and refresh this page.`;
    } else if (!result.availability) {
      console.error(`‚ùå Booking ${bookingId} has no availability data`);
      error = `Booking data is incomplete. Please contact support with booking ID: ${bookingId}`;
    } else {
      console.log(`‚úÖ Booking found and validated: ${bookingId}`);
      booking = {
        ...result,
        availability: result.availability
      };
    }
  } catch (e: any) {
    console.error(`‚ùå Database error looking up booking ${bookingId}:`, e);
    error = `Unable to retrieve booking details. Please try refreshing the page or contact support with booking ID: ${bookingId}`;
  }
}
---

<Layout title="Payment Successful">
  <Container>
    <div class="max-w-xl mx-auto py-16 text-center">
      <div class="mb-8">
        {error ? (
          <div class="bg-red-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
            <Icon name="mdi:alert-circle" class="w-8 h-8 text-red-700" />
          </div>
        ) : (
          <div class="bg-green-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
            <Icon name="mdi:check" class="w-8 h-8 text-green-700" />
          </div>
        )}
        
        <h1 class="text-4xl font-bold mb-4">
          {error ? 'Booking Issue' : 'Payment Successful'}
        </h1>
        
        {error ? (
          <div class="bg-red-50 text-red-700 p-6 rounded-lg text-left">
            <h3 class="font-semibold mb-2">What happened?</h3>
            <p class="mb-4">{error}</p>
            
            <h3 class="font-semibold mb-2">What to do next:</h3>
            <ul class="list-disc list-inside space-y-1 text-sm">
              <li>Wait a few minutes and refresh this page</li>
              <li>Check your email for a confirmation message</li>
              <li>Contact support if the issue persists</li>
              {bookingId && (
                <li>Reference booking ID: <code class="bg-red-100 px-1 rounded">{bookingId}</code></li>
              )}
            </ul>
          </div>
        ) : booking ? (
          <>
            <p class="text-lg text-gray-600 mb-8">
              Thank you for booking with Birth Debrief. We'll be in touch shortly 
              with your video consultation details.
            </p>
            <div class="mt-8 bg-green-50 p-6 rounded-lg text-left">
              <h3 class="font-semibold mb-4 text-center">Booking Confirmation</h3>
              <div class="space-y-2">
                <div class="flex justify-between">
                  <span class="font-medium">Date:</span>
                  <span>{new Date(booking.availability!.date).toLocaleDateString('en-GB', {
                    weekday: 'long',
                    year: 'numeric', 
                    month: 'long',
                    day: 'numeric'
                  })}</span>
                </div>
                <div class="flex justify-between">
                  <span class="font-medium">Time:</span>
                  <span>{booking.availability!.startTime}</span>
                </div>
                <div class="flex justify-between">
                  <span class="font-medium">Midwife:</span>
                  <span class="capitalize">{booking.availability!.midwife}</span>
                </div>
                <div class="flex justify-between">
                  <span class="font-medium">Confirmation sent to:</span>
                  <span>{booking.email}</span>
                </div>
              </div>
              <div class="mt-4 pt-4 border-t border-green-200">
                <p class="text-center text-sm text-gray-600">
                  Booking ID: <code class="bg-green-100 px-2 py-1 rounded">{bookingId}</code>
                </p>
              </div>
            </div>
            
            <div class="mt-6 p-4 bg-blue-50 rounded-lg text-left">
              <h4 class="font-semibold text-blue-800 mb-2">What happens next?</h4>
              <ul class="text-sm text-blue-700 space-y-1">
                <li>‚Ä¢ You'll receive a confirmation email shortly</li>
                <li>‚Ä¢ A Microsoft Teams meeting link will be sent 24 hours before your appointment</li>
                <li>‚Ä¢ Check your spam/junk folder if you don't see our emails</li>
                <li>‚Ä¢ Reply to the confirmation email if you have any questions</li>
              </ul>
            </div>
          </>
        ) : null}
      </div>
      
      <div class="flex gap-4 justify-center">
        <a
          href="/"
          class="inline-flex items-center justify-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
        >
          Return to Homepage
        </a>
        
        {!error && (
          <a
            href="/contact"
            class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-green-700 hover:bg-green-800"
          >
            Contact Us
          </a>
        )}
      </div>
    </div>
  </Container>
</Layout>